
/*
	INDSExManGUI.java

	Copyright 2009 Creare Inc.

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.


	---  History  ---
	01/07/09  JPW  Created.
*/

package com.rbnb.inds;

import com.rbnb.inds.exec.Remote;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

public class INDSExManGUI extends javax.swing.JFrame {

    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new INDSExManGUI().setVisible(true);
            }
        });
    }

    /*
     * Constructor
     */
    public INDSExManGUI() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        hostNameTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        commandLB = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        stdoutTA = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        stderrTA = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        xmlTA = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        connectB = new javax.swing.JButton();
        completeCB = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("INDS Execution Manager");

        jLabel1.setText("Host");

        commandLB.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        commandLB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                commandLBMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(commandLB);

        jLabel2.setText("Std out");

        stdoutTA.setColumns(20);
        stdoutTA.setEditable(false);
        stdoutTA.setRows(5);
        jScrollPane2.setViewportView(stdoutTA);

        jScrollPane3.setViewportView(jScrollPane2);

        stderrTA.setColumns(20);
        stderrTA.setEditable(false);
        stderrTA.setRows(5);
        jScrollPane5.setViewportView(stderrTA);

        jScrollPane4.setViewportView(jScrollPane5);

        jLabel3.setText("Std err");

        xmlTA.setColumns(20);
        xmlTA.setEditable(false);
        xmlTA.setRows(5);
        jScrollPane7.setViewportView(xmlTA);

        jScrollPane6.setViewportView(jScrollPane7);

        jLabel4.setText("XML");

        connectB.setText("Connect");
        connectB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectBActionPerformed(evt);
            }
        });

        completeCB.setText("Command execution is complete?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hostNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(connectB))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)
                                    .addComponent(jLabel3)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)
                                    .addComponent(jLabel4)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(completeCB)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(hostNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connectB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(completeCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void commandLBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_commandLBMouseClicked
        try {
            // User clicked on a command in the list box; get associated
            // information via the RMI interface.
            // int index = commandLB.locationToIndex(evt.getPoint());
            String command = (String) commandLB.getSelectedValue();
            completeCB.setSelected(remoteObj.isComplete(command));
            stdoutTA.setText(remoteObj.getCommandOut(command));
            stderrTA.setText(remoteObj.getCommandError(command));
            xmlTA.setText(remoteObj.getConfiguration(command));
        } catch (RemoteException ex) {
            Logger.getLogger(INDSExManGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_commandLBMouseClicked

    private void connectBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectBActionPerformed
        String hostName = hostNameTF.getText().trim();
        DefaultListModel commandModel = new DefaultListModel();
        try {
            // Connect using RMI:
            java.rmi.registry.Registry reg =
                java.rmi.registry.LocateRegistry.getRegistry(hostName);
            String[] names = reg.list();
            int index = 0;
            remoteObj = (Remote) reg.lookup(names[index]);
            String[] commands = remoteObj.getCommandList();
            for (String cmd : commands) {
                commandModel.addElement(cmd);
            }
            commandLB.setModel(commandModel);
        } catch (NotBoundException ex) {
            Logger.getLogger(INDSExManGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (AccessException ex) {
            Logger.getLogger(INDSExManGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(INDSExManGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_connectBActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList commandLB;
    private javax.swing.JCheckBox completeCB;
    private javax.swing.JButton connectB;
    private javax.swing.JTextField hostNameTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextArea stderrTA;
    private javax.swing.JTextArea stdoutTA;
    private javax.swing.JTextArea xmlTA;
    // End of variables declaration//GEN-END:variables

    private Remote remoteObj = null;
}
